#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 63 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 1364 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"cube.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 4 #") (("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #")) "
0 0 22 3 3 #"333"
0 0 25 3 1 #" "
0 0 22 3 2 #"55"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #" (("
0 0 19 3 5 #"\"id2\""
0 0 25 3 3 #" (("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #")) "
0 0 22 3 3 #"666"
0 0 25 3 1 #" "
0 0 22 3 2 #"99"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 6 #" ()) ("
0 0 19 3 5 #"\"id3\""
0 0 25 3 3 #" (("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #")) "
0 0 22 3 3 #"373"
0 0 25 3 1 #" "
0 0 22 3 3 #"575"
0 0 25 3 1 #" "
0 0 22 3 2 #"98"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 7 #" ()))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #") (("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #")) "
0 0 22 3 3 #"333"
0 0 25 3 1 #" "
0 0 22 3 2 #"55"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 5 #" ()))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 5 #") () "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"99"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 5 #" ()))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";POSICIONES DE LOS ELEMENTOS"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"iId"
0 0 25 3 7 #"       "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"iPath"
0 0 25 3 5 #"     "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"iAlpha"
0 0 25 3 4 #"    "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"iBeta"
0 0 25 3 5 #"     "
0 0 22 3 1 #"4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"iWeight"
0 0 25 3 3 #"   "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"iType"
0 0 25 3 5 #"     "
0 0 22 3 1 #"6"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"iChildren"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenNodo"
0 0 25 3 3 #"   "
0 0 22 3 1 #"7"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";Obtener un elemento de una lista en una posicion dada"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #") "
0 0 19 3 22 #"\"Las has liado chaval\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"get"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";Poner un elemento en una lista en una posicion dada"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"put"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #") "
0 0 14 3 4 #"elem"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 3 #"put"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #") "
0 0 14 3 4 #"elem"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";Quitar un elemento en una lista en una posicion dada"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #") "
0 0 14 3 4 #"null"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 6 #"remove"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"set"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"put"
0 0 25 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #") "
0 0 14 3 4 #"elem"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"establish"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #") "
0 0 14 3 7 #"lenNodo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 3 #"put"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 3 #"set"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";Devuelve la id de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getId"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 3 #"iId"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #")("
0 0 14 3 3 #"car"
0 0 25 3 1 #"("
0 0 14 3 5 #"getId"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getY"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #")("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #"("
0 0 14 3 5 #"getId"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getZ"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #")("
0 0 14 3 5 #"caddr"
0 0 25 3 1 #"("
0 0 14 3 5 #"getId"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getNX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #")("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getNY"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #")("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getY"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getNZ"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #")("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getZ"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";Devuelve una lista de caminos"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"getPath"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"iPath"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";Pone una lista de caminos en un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"putPath"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 4 #"path"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"establish"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 4 #"path"
0 0 25 3 1 #" "
0 0 14 3 5 #"iPath"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";Aumenta la lista de caminos"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"extendPath"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"putPath"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"iPath"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";Devuelve el alpha de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"getAlpha"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 6 #"iAlpha"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";Establece el alpha de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"setAlpha"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"alpha"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"establish"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"alpha"
0 0 25 3 1 #" "
0 0 14 3 6 #"iAlpha"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";Devuelve el beta de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"getBeta"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"iBeta"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";Establece el beta de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"setBeta"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 4 #"beta"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"establish"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 4 #"beta"
0 0 25 3 1 #" "
0 0 14 3 5 #"iBeta"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";Devuelve el peso de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getW"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 7 #"iWeight"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";Establece el peso de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"setW"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"establish"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 7 #"iWeight"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";Devuelve el tipo (MAX o MIN) de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"getType"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"iType"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"addChild"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 8 #"nodoHijo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"set"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 8 #"nodoHijo"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 9 #"iChildren"
0 0 25 3 6 #"))))) "
0 0 14 3 9 #"iChildren"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";Devuelve cuantos hijos tiene un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"getChildAmount"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"iPath"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";Obtiene un hijo ya creado dependiendo del indice dado"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getChildIndex"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"get"
0 0 25 3 2 #" ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 9 #"iChildren"
0 0 25 3 2 #") "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";Obtiene un hijo ya creado dependiendo de la id dada"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"getChildId"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"_getChildId"
0 0 25 3 1 #" "
0 0 14 3 9 #"ChildList"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 9 #"ChildList"
0 0 25 3 2 #") "
0 0 19 3 22 #"\"Las has liado chaval\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getId"
0 0 25 3 1 #"("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"ChildList"
0 0 25 3 3 #")) "
0 0 14 3 2 #"id"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"ChildList"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"_getChildId"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 9 #"ChildList"
0 0 25 3 2 #") "
0 0 14 3 2 #"id"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"_getChildId"
0 0 25 3 2 #" ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 9 #"iChildren"
0 0 25 3 2 #") "
0 0 14 3 2 #"id"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";Generador de hijos"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"newChild"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 14 3 5 #"alpha"
0 0 25 3 1 #" "
0 0 14 3 4 #"beta"
0 0 25 3 1 #" "
0 0 14 3 4 #"tipo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 5 #"alpha"
0 0 25 3 1 #" "
0 0 14 3 4 #"beta"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 4 #"tipo"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rootChild"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 14 3 4 #"tipo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 6 #"-inf.0"
0 0 25 3 1 #" "
0 0 22 3 6 #"+inf.0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 4 #"tipo"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";Pinta un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"lcube"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 4 #"getY"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 4 #"getZ"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";Devuelve cuantos hijos se pueden generar desde un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getChildCount"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getNX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getNY"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getNZ"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 74
(
 #";Genera el siguiente hijo dependiendo de la cantidad de hijos ya gen"
 #"erados"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"nextChild"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 25 3 2 #" ["
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 6 #"limity"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 4 #"getY"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")) "
0 0 14 3 5 #"index"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 1 #"y"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #" ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"limity"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"getX"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"getY"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 1 #"z"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"limity"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 6 #"limity"
0 0 25 3 3 #") ("
0 0 14 3 4 #"getZ"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 5 #"alpha"
0 0 25 3 2 #" ("
0 0 14 3 8 #"getAlpha"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"beta"
0 0 25 3 2 #" ("
0 0 14 3 7 #"getBeta"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"putPath"
0 0 25 3 2 #" ("
0 0 14 3 8 #"newChild"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 14 3 5 #"alpha"
0 0 25 3 1 #" "
0 0 14 3 4 #"beta"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 7 #"getType"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getId"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 3 #") ("
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"iPath"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";Genera todos los hijos de un nodo"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"createChildren"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"_creteChilds"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 14 3 4 #"nodo"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 12 #"_creteChilds"
0 0 25 3 2 #" ("
0 0 14 3 8 #"addChild"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #" ("
0 0 14 3 9 #"nextChild"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"_creteChilds"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getChildCount"
0 0 25 3 1 #" "
0 0 14 3 4 #"nodo"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0           0
